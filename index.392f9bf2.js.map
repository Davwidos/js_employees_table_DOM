{"mappings":"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,E,C,K,E,G,M,E,G,O,E,E,E,A,Y,O,Q,C,C,C,O,Q,C,C,W,O,I,A,C,E,E,S,E,C,E,O,S,C,E,O,A,S,C,E,G,E,M,A,U,mC,K,G,G,C,G,E,E,G,C,E,A,E,C,C,E,C,E,M,C,C,C,E,C,E,K,E,C,A,C,E,E,M,A,G,E,I,C,G,C,E,E,I,A,G,C,A,C,E,E,I,C,E,C,C,E,C,E,I,C,O,E,O,E,E,A,G,C,E,C,A,E,C,C,E,C,E,K,C,A,E,C,C,E,E,K,E,K,E,E,E,K,M,E,O,E,K,G,C,M,C,C,E,C,K,C,C,C,M,E,E,K,G,E,C,C,E,C,E,C,E,C,Q,M,E,E,E,G,C,G,G,E,I,C,G,G,Q,S,G,C,C,E,A,C,E,E,I,A,E,M,C,G,C,C,E,M,C,E,A,G,C,A,I,C,C,E,E,A,I,C,C,E,A,E,C,E,E,Q,C,G,A,I,C,C,E,E,C,C,G,C,C,E,C,C,C,E,E,C,C,E,C,C,C,E,A,E,C,E,K,C,C,C,E,C,K,C,G,A,I,C,C,E,E,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,E,K,C,G,G,E,K,C,C,C,E,C,C,E,K,C,C,C,E,C,E,G,C,I,C,G,K,C,C,C,E,E,E,G,C,G,G,E,I,C,G,G,Q,C,E,E,I,C,E,E,C,M,E,C,E,C,E,E,C,E,C,Q,C,E,E,C,C,G,A,E,C,C,E,C,M,C,C,E,C,M,C,M,C,C,E,C,C,C,E,C,K,E,K,C,C,C,E,C,E,E,C,C,C,E,I,C,S,C,E,O,E,K,E,K,EANN,GAAI,AAAqB,OAArB,EAAE,MAAM,CAAC,OAAO,EAAa,EAC/B,MADF,C,E,CAKM,EAAc,AADd,CAAA,EAAO,EAAE,MAAM,AAAN,EACU,SAAS,CAGlC,AAFM,CAAA,EAAQ,SAAS,aAAa,CAAC,QAA/B,EAEA,IAAI,CAAG,OACb,EAAM,SAAS,CAAG,aAClB,EAAM,KAAK,CAAG,EAEd,EAAK,SAAS,CAAG,GACjB,EAAK,MAAM,CAAC,GACZ,EAAM,KAAK,G,E,K,C,C,M,MAcQ,EAVL,O,E,I,C,I,C,C,E,E,E,E,EADZ,EAAS,CAAA,EACT,EAAA,EAAK,MAAM,CAAC,C,GAUK,EAVe,EA+B7B,IAAI,QApBM,SAAC,CAAA,CAAS,CAA3B,EACE,IAAM,EAAoB,WACxB,GAAI,EAAM,KAAK,CAAC,MAAM,CAAG,EAAG,CAC1B,IAEA,MACF,CAEA,EAAQ,EAAM,KAAK,CACrB,EAEA,EAAM,gBAAgB,CAAC,OAAQ,GAE/B,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACgB,UAAV,EAAE,GAAG,EACP,GAEJ,EACF,I,A,M,E,OA7BI,EAAA,KAAA,CAAA,EAAA,CAAY,EAAA,IAAA,G,E,C,E,E,A,M,E,OACL,EAAA,IAAA,GACP,EAAK,SAAS,CAAG,E,C,E,E,A,M,E,OAEjB,EAAM,MAAM,GACZ,EAAS,CAAA,E,C,E,A,M,E,M,C,E,A,C,EAEb,EA1BO,E,W,I,E,I,C,E,U,O,I,Q,S,C,C,C,E,I,E,E,K,C,E,G,S,E,C,E,E,E,E,E,E,E,O,E,C,S,E,C,E,E,E,E,E,E,E,Q,E,C,E,K,E,E,EAAO,SAAA,CAAA,E,O,E,K,C,I,C,U,GAsGhB,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,WAAY,GACtC,EAAY,gBAAgB,CAAC,SAjOpB,SAAC,CAAR,EACE,EAAE,cAAc,GAEhB,IA2D2B,EAAc,EAAU,EAAQ,EAAK,EAC5D,EACA,EACA,EACA,EACA,EACA,EAjEE,EAAO,EAAE,aAAa,CACtB,EAAW,IAAI,SAAS,GACxB,EAAW,CAAC,EAEb,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAsB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAtB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,C,I,E,A,WAAK,I,EAAA,G,EAAA,EAAA,KAAA,C,A,S,C,E,G,M,O,C,G,O,C,E,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,C,G,E,M,G,G,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,EAAA,I,A,W,M,A,U,6I,KAAO,EAAA,CAAA,CAAA,EAAA,CAAK,EAAZ,CAAA,CAAA,EAAA,CACH,GAAI,EAAM,MAAM,CAAG,EASjB,OARA,EACE,EACA,EACA,cACC,SAAY,MAAA,CAAJ,EAAI,cACb,SAGF,C,E,K,CAAM,EAGR,IAAM,EAAQ,AAwMwB,EAxMb,IAAI,CAAC,SAAC,CAA/B,EAAsC,OAAA,EAAG,IAAI,GAAK,C,GAC9C,EAAe,CAAA,EAEnB,OAAQ,EAAM,IAAI,EAChB,IAAK,SACH,EAAe,EAAU,CAAC,EAAO,GACjC,KACF,KAAK,OACH,EAAe,EAAU,EAAM,MAAM,CAAE,EAE3C,CAEA,IAAI,EAWF,OARA,EACE,EACA,EACA,eACC,WAAc,MAAA,CAAJ,EAAI,gBACf,SAGF,C,E,K,CAAM,CAVN,CAAA,CAAQ,CAAC,EAAI,CAAG,CAYpB,I,G,A,U,C,A,G,A,a,O,Q,A,E,W,G,O,S,O,C,E,O,E,C,A,C,C,M,E,CAtCK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAuDsB,EAAR,AAfL,EAeO,IAAA,CAAoB,EAAtB,AAfL,EAe2B,QAAA,CAAU,EAAhC,AAfL,EAeqC,MAAA,CAAQ,EAAxC,AAfL,EAe6C,GAAA,CAAK,EAA7C,AAfL,EAekD,MAA3C,CACjB,EAAM,SAAS,aAAa,CAAC,MAC7B,EAAc,SAAS,aAAa,CAAC,MACrC,EAAkB,SAAS,aAAa,CAAC,MACzC,EAAgB,SAAS,aAAa,CAAC,MACvC,EAAa,SAAS,aAAa,CAAC,MACpC,EAAgB,SAAS,aAAa,CAAC,MAE7C,EAAY,SAAS,CAAG,EACxB,EAAgB,SAAS,CAAG,EAC5B,EAAc,SAAS,CAAG,EAC1B,EAAW,SAAS,CAAG,EACvB,EAAc,SAAS,CAlPU,IAAM,AAkPE,CAAA,CAAC,CAA1C,EAlP8C,cAAc,CAAC,SAoP7D,EAAI,MAAM,CACR,EACA,EACA,EACA,EACA,GAGF,AAwIuD,EAxIjD,MAAM,CAAC,GAnCX,EACE,EACA,EACA,iBACA,+CACA,WAEF,EAAK,KAAK,EACZ,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _async_to_generator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _type_of(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction _ts_generator(thisArg, body) {\n    var f, y, t, g, _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    };\n    return(g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g);\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\n// #region utils\nvar compareNumbers = function(a, b) {\n    return +a.replace(/\\D/g, \"\") - +b.replace(/\\D/g, \"\");\n};\nvar compareStrings = function(a, b) {\n    return a.localeCompare(b);\n};\nvar capitalize = function(string) {\n    return string.slice(0, 1).toUpperCase() + string.slice(1).toLowerCase();\n};\nvar isInRange = function(value, param) {\n    var _param_min = param.min, min = _param_min === void 0 ? 0 : _param_min, _param_max = param.max, max = _param_max === void 0 ? Infinity : _param_max;\n    return value >= min && value <= max;\n};\nvar salaryToString = function(salary) {\n    return \"$\" + salary.toLocaleString(\"en-US\");\n};\n// #endregion\n// #region createSortListener\nfunction createSortListener() {\n    var currentOrderBy = null;\n    return function(e) {\n        if (e.target.tagName !== \"TH\" || !e.target.closest(\"thead\")) return;\n        var colIndex = 0;\n        for(var node = e.target.previousElementSibling; node; node = node.previousElementSibling)colIndex++;\n        var table = e.target.closest(\"table\");\n        if (!table) throw new Error(\"th not isnsie table\");\n        var rows = Array.from(table.querySelectorAll(\"tbody tr\"));\n        var title = e.target.innerText;\n        if (e.target === currentOrderBy) rows.reverse();\n        else {\n            sortRows(title, rows, colIndex);\n            currentOrderBy = e.target;\n        }\n        var tbody = table.querySelector(\"tbody\");\n        rows.forEach(function(row) {\n            return tbody.append(row);\n        });\n    };\n}\nfunction sortRows(title, rows, colIndex) {\n    var isNumber;\n    switch(title.toUpperCase()){\n        case \"AGE\":\n        case \"SALARY\":\n            isNumber = true;\n            break;\n        default:\n            isNumber = false;\n    }\n    rows.sort(function(a, b) {\n        var textA = a.children.item(colIndex).innerText;\n        var textB = b.children.item(colIndex).innerText;\n        return isNumber ? compareNumbers(textA, textB) : compareStrings(textA, textB);\n    });\n    return rows;\n}\n// #endregion\n// #region createSelectLister\nfunction createSelectListener() {\n    var activeRow = null;\n    return function(e) {\n        if (!e.target.closest(\"tbody\")) return;\n        var row = e.target.closest(\"tr\");\n        if (!row) throw new Error(\"not inside tr tag\");\n        if (activeRow) {\n            if (activeRow === row) return;\n            activeRow.classList.toggle(\"active\");\n        }\n        activeRow = row;\n        activeRow.classList.toggle(\"active\");\n    };\n}\n// #endregion\n// #region createForm\nfunction createForm(formFields) {\n    var form = document.createElement(\"FORM\");\n    form.className = \"new-employee-form\";\n    formFields.forEach(function(data) {\n        var field;\n        switch(data.type){\n            case \"select\":\n                field = createSelect(data);\n                break;\n            case \"button\":\n                field = createButton(data);\n                break;\n            default:\n                field = createInput(data);\n        }\n        form.append(field);\n    });\n    return form;\n}\nfunction createInput(param) {\n    var inputName = param.name, type = param.type;\n    var label = document.createElement(\"LABEL\");\n    var input = document.createElement(\"INPUT\");\n    input.name = inputName;\n    input.type = type;\n    input.dataset.qa = inputName;\n    label.append(capitalize(inputName), input);\n    return label;\n}\nfunction createSelect(param) {\n    var selectName = param.name, options = param.options;\n    var label = document.createElement(\"LABEL\");\n    var select = document.createElement(\"SELECT\");\n    select.name = selectName;\n    select.dataset.qa = selectName;\n    options.forEach(function(optionName) {\n        var option = document.createElement(\"OPTION\");\n        option.value = optionName;\n        option.innerText = optionName;\n        select.append(option);\n    });\n    label.append(capitalize(selectName), select);\n    return label;\n}\nfunction createButton(param) {\n    var buttonName = param.name;\n    var button = document.createElement(\"BUTTON\");\n    button.type = \"submit\";\n    button.append(buttonName);\n    return button;\n}\n// #endregion\n// #region createFormValidation\nfunction createFormValidation(formFields, table) {\n    return function(e) {\n        e.preventDefault();\n        var form = e.currentTarget;\n        var formData = new FormData(form);\n        var employee = {};\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            var _loop = function() {\n                var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], value = _step_value[1];\n                if (value.length < 1) {\n                    pushNotification(0, 0, \"Empty field\", \"Field \".concat(key, \" was empty\"), \"error\");\n                    return {\n                        v: void void 0\n                    };\n                }\n                var field = formFields.find(function(el) {\n                    return el.name === key;\n                });\n                var isFieldValid = true;\n                switch(field.type){\n                    case \"number\":\n                        isFieldValid = isInRange(+value, field);\n                        break;\n                    case \"text\":\n                        isFieldValid = isInRange(value.length, field);\n                        break;\n                }\n                if (isFieldValid) employee[key] = value;\n                else {\n                    pushNotification(0, 0, \"Invalid Data\", \"Data in \".concat(key, \" was invalid\"), \"error\");\n                    return {\n                        v: void void 0\n                    };\n                }\n            };\n            for(var _iterator = formData[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var _ret = _loop();\n                if (_type_of(_ret) === \"object\") return _ret.v;\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        addRow(table, employee);\n        pushNotification(0, 0, \"Employee added\", \"Employee was successfully added to the table\", \"success\");\n        form.reset();\n    };\n}\n// #endregion\n// #region addRow\nfunction addRow(table, param) {\n    var employeeName = param.name, position = param.position, office = param.office, age = param.age, salary = param.salary;\n    var row = document.createElement(\"TR\");\n    var nameElement = document.createElement(\"TD\");\n    var positionElement = document.createElement(\"TD\");\n    var officeElement = document.createElement(\"TD\");\n    var ageElement = document.createElement(\"TD\");\n    var salaryElement = document.createElement(\"TD\");\n    nameElement.innerText = employeeName;\n    positionElement.innerText = position;\n    officeElement.innerText = office;\n    ageElement.innerText = age;\n    salaryElement.innerText = salaryToString(+salary);\n    row.append(nameElement, positionElement, officeElement, ageElement, salaryElement);\n    table.append(row);\n}\n// #endregion\n// #region pushNotification\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var notification = document.createElement(\"DIV\");\n    var titleElement = document.createElement(\"H2\");\n    var descriptionElement = document.createElement(\"P\");\n    titleElement.className = \"title\";\n    titleElement.innerText = title;\n    descriptionElement.innerText = description;\n    notification.className = \"notification \".concat(type);\n    notification.style.top = \"\".concat(posTop, \"px\");\n    notification.style.right = \"\".concat(posRight, \"px\");\n    notification.dataset.qa = \"notification\";\n    notification.append(titleElement, descriptionElement);\n    document.body.append(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 4000);\n    return notification;\n};\n// #endregion\n// #region createEditListener\nfunction createEditListener() {\n    var inEdit = false;\n    return function() {\n        var _ref = _async_to_generator(function(e) {\n            var cell, currentText, input, _, error;\n            return _ts_generator(this, function(_state) {\n                switch(_state.label){\n                    case 0:\n                        if (e.target.tagName !== \"TD\" || inEdit) return [\n                            2\n                        ];\n                        cell = e.target;\n                        currentText = cell.innerText;\n                        input = document.createElement(\"INPUT\");\n                        input.type = \"text\";\n                        input.className = \"cell-input\";\n                        input.value = currentText;\n                        cell.innerText = \"\";\n                        cell.append(input);\n                        input.focus();\n                        _state.label = 1;\n                    case 1:\n                        _state.trys.push([\n                            1,\n                            3,\n                            4,\n                            5\n                        ]);\n                        inEdit = true;\n                        _ = cell.append;\n                        return [\n                            4,\n                            getInputValue(input)\n                        ];\n                    case 2:\n                        _.apply(cell, [\n                            _state.sent()\n                        ]);\n                        return [\n                            3,\n                            5\n                        ];\n                    case 3:\n                        error = _state.sent();\n                        cell.innerText = currentText;\n                        return [\n                            3,\n                            5\n                        ];\n                    case 4:\n                        input.remove();\n                        inEdit = false;\n                        return [\n                            7\n                        ];\n                    case 5:\n                        return [\n                            2\n                        ];\n                }\n            });\n        });\n        return function(e) {\n            return _ref.apply(this, arguments);\n        };\n    }();\n}\nfunction getInputValue(input) {\n    var resolver = function(resolve, reject) {\n        var inputEventHandler = function() {\n            if (input.value.length < 1) {\n                reject();\n                return;\n            }\n            resolve(input.value);\n        };\n        input.addEventListener(\"blur\", inputEventHandler);\n        input.addEventListener(\"keyup\", function(e) {\n            if (e.key === \"Enter\") inputEventHandler();\n        });\n    };\n    return new Promise(resolver);\n}\n// #endregion\nvar FORM_FIELDS = [\n    {\n        name: \"name\",\n        type: \"text\",\n        min: 4\n    },\n    {\n        name: \"position\",\n        type: \"text\"\n    },\n    {\n        name: \"office\",\n        type: \"select\",\n        options: [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinburgh\",\n            \"San Francisco\"\n        ]\n    },\n    {\n        name: \"age\",\n        type: \"number\",\n        min: 18,\n        max: 90\n    },\n    {\n        name: \"salary\",\n        type: \"number\"\n    },\n    {\n        name: \"Save to table\",\n        type: \"button\"\n    }\n];\nvar formElement = createForm(FORM_FIELDS);\nvar tbodyElement = document.querySelector(\"table tbody\");\ndocument.body.append(formElement);\nvar sortListener = createSortListener();\nvar selectListener = createSelectListener();\nvar edditListenr = createEditListener();\nvar formValidation = createFormValidation(FORM_FIELDS, tbodyElement);\ndocument.addEventListener(\"click\", sortListener);\ndocument.addEventListener(\"click\", selectListener);\ndocument.addEventListener(\"dblclick\", edditListenr);\nformElement.addEventListener(\"submit\", formValidation);\n\n//# sourceMappingURL=index.392f9bf2.js.map\n","'use strict';\n\n// #region utils\nconst compareNumbers = (a, b) => +a.replace(/\\D/g, '') - +b.replace(/\\D/g, '');\nconst compareStrings = (a, b) => a.localeCompare(b);\nconst capitalize = (string) =>\n  string.slice(0, 1).toUpperCase() + string.slice(1).toLowerCase();\nconst isInRange = (value, { min = 0, max = Infinity }) =>\n  value >= min && value <= max;\nconst salaryToString = (salary) => '$' + salary.toLocaleString('en-US');\n// #endregion\n\n// #region createSortListener\nfunction createSortListener() {\n  let currentOrderBy = null;\n\n  return (e) => {\n    if (e.target.tagName !== 'TH' || !e.target.closest('thead')) {\n      return;\n    }\n\n    let colIndex = 0;\n\n    for (\n      let node = e.target.previousElementSibling;\n      node;\n      node = node.previousElementSibling\n    ) {\n      colIndex++;\n    }\n\n    const table = e.target.closest('table');\n\n    if (!table) {\n      throw new Error('th not isnsie table');\n    }\n\n    const rows = Array.from(table.querySelectorAll('tbody tr'));\n    const title = e.target.innerText;\n\n    if (e.target === currentOrderBy) {\n      rows.reverse();\n    } else {\n      sortRows(title, rows, colIndex);\n      currentOrderBy = e.target;\n    }\n\n    const tbody = table.querySelector('tbody');\n\n    rows.forEach((row) => tbody.append(row));\n  };\n}\n\nfunction sortRows(title, rows, colIndex) {\n  let isNumber;\n\n  switch (title.toUpperCase()) {\n    case 'AGE':\n    case 'SALARY':\n      isNumber = true;\n      break;\n    default:\n      isNumber = false;\n  }\n\n  rows.sort((a, b) => {\n    const textA = a.children.item(colIndex).innerText;\n    const textB = b.children.item(colIndex).innerText;\n\n    return isNumber\n      ? compareNumbers(textA, textB)\n      : compareStrings(textA, textB);\n  });\n\n  return rows;\n}\n// #endregion\n\n// #region createSelectLister\nfunction createSelectListener() {\n  let activeRow = null;\n\n  return (e) => {\n    if (!e.target.closest('tbody')) {\n      return;\n    }\n\n    const row = e.target.closest('tr');\n\n    if (!row) {\n      throw new Error('not inside tr tag');\n    }\n\n    if (activeRow) {\n      if (activeRow === row) {\n        return;\n      }\n\n      activeRow.classList.toggle('active');\n    }\n    activeRow = row;\n    activeRow.classList.toggle('active');\n  };\n}\n// #endregion\n\n// #region createForm\nfunction createForm(formFields) {\n  const form = document.createElement('FORM');\n\n  form.className = 'new-employee-form';\n\n  formFields.forEach((data) => {\n    let field;\n\n    switch (data.type) {\n      case 'select':\n        field = createSelect(data);\n        break;\n      case 'button':\n        field = createButton(data);\n        break;\n      default:\n        field = createInput(data);\n    }\n\n    form.append(field);\n  });\n\n  return form;\n}\n\nfunction createInput({ name: inputName, type }) {\n  const label = document.createElement('LABEL');\n  const input = document.createElement('INPUT');\n\n  input.name = inputName;\n  input.type = type;\n  input.dataset.qa = inputName;\n\n  label.append(capitalize(inputName), input);\n\n  return label;\n}\n\nfunction createSelect({ name: selectName, options }) {\n  const label = document.createElement('LABEL');\n  const select = document.createElement('SELECT');\n\n  select.name = selectName;\n  select.dataset.qa = selectName;\n\n  options.forEach((optionName) => {\n    const option = document.createElement('OPTION');\n\n    option.value = optionName;\n    option.innerText = optionName;\n    select.append(option);\n  });\n\n  label.append(capitalize(selectName), select);\n\n  return label;\n}\n\nfunction createButton({ name: buttonName }) {\n  const button = document.createElement('BUTTON');\n\n  button.type = 'submit';\n  button.append(buttonName);\n\n  return button;\n}\n// #endregion\n\n// #region createFormValidation\nfunction createFormValidation(formFields, table) {\n  return (e) => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const formData = new FormData(form);\n    const employee = {};\n\n    for (const [key, value] of formData) {\n      if (value.length < 1) {\n        pushNotification(\n          0,\n          0,\n          'Empty field',\n          `Field ${key} was empty`,\n          'error',\n        );\n\n        return;\n      }\n\n      const field = formFields.find((el) => el.name === key);\n      let isFieldValid = true;\n\n      switch (field.type) {\n        case 'number':\n          isFieldValid = isInRange(+value, field);\n          break;\n        case 'text':\n          isFieldValid = isInRange(value.length, field);\n          break;\n      }\n\n      if (isFieldValid) {\n        employee[key] = value;\n      } else {\n        pushNotification(\n          0,\n          0,\n          'Invalid Data',\n          `Data in ${key} was invalid`,\n          'error',\n        );\n\n        return;\n      }\n    }\n\n    addRow(table, employee);\n\n    pushNotification(\n      0,\n      0,\n      'Employee added',\n      'Employee was successfully added to the table',\n      'success',\n    );\n    form.reset();\n  };\n}\n// #endregion\n\n// #region addRow\nfunction addRow(table, { name: employeeName, position, office, age, salary }) {\n  const row = document.createElement('TR');\n  const nameElement = document.createElement('TD');\n  const positionElement = document.createElement('TD');\n  const officeElement = document.createElement('TD');\n  const ageElement = document.createElement('TD');\n  const salaryElement = document.createElement('TD');\n\n  nameElement.innerText = employeeName;\n  positionElement.innerText = position;\n  officeElement.innerText = office;\n  ageElement.innerText = age;\n  salaryElement.innerText = salaryToString(+salary);\n\n  row.append(\n    nameElement,\n    positionElement,\n    officeElement,\n    ageElement,\n    salaryElement,\n  );\n\n  table.append(row);\n}\n// #endregion\n\n// #region pushNotification\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('DIV');\n  const titleElement = document.createElement('H2');\n  const descriptionElement = document.createElement('P');\n\n  titleElement.className = 'title';\n  titleElement.innerText = title;\n\n  descriptionElement.innerText = description;\n\n  notification.className = `notification ${type}`;\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n  notification.dataset.qa = 'notification';\n\n  notification.append(titleElement, descriptionElement);\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 4000);\n\n  return notification;\n};\n// #endregion\n\n// #region createEditListener\nfunction createEditListener() {\n  let inEdit = false;\n\n  return async (e) => {\n    if (e.target.tagName !== 'TD' || inEdit) {\n      return;\n    }\n\n    const cell = e.target;\n    const currentText = cell.innerText;\n    const input = document.createElement('INPUT');\n\n    input.type = 'text';\n    input.className = 'cell-input';\n    input.value = currentText;\n\n    cell.innerText = '';\n    cell.append(input);\n    input.focus();\n\n    try {\n      inEdit = true;\n      cell.append(await getInputValue(input));\n    } catch (error) {\n      cell.innerText = currentText;\n    } finally {\n      input.remove();\n      inEdit = false;\n    }\n  };\n}\n\nfunction getInputValue(input) {\n  const resolver = (resolve, reject) => {\n    const inputEventHandler = () => {\n      if (input.value.length < 1) {\n        reject();\n\n        return;\n      }\n\n      resolve(input.value);\n    };\n\n    input.addEventListener('blur', inputEventHandler);\n\n    input.addEventListener('keyup', (e) => {\n      if (e.key === 'Enter') {\n        inputEventHandler();\n      }\n    });\n  };\n\n  return new Promise(resolver);\n}\n// #endregion\n\nconst FORM_FIELDS = [\n  {\n    name: 'name',\n    type: 'text',\n    min: 4,\n  },\n  {\n    name: 'position',\n    type: 'text',\n  },\n  {\n    name: 'office',\n    type: 'select',\n    options: [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinburgh',\n      'San Francisco',\n    ],\n  },\n  {\n    name: 'age',\n    type: 'number',\n    min: 18,\n    max: 90,\n  },\n  {\n    name: 'salary',\n    type: 'number',\n  },\n  {\n    name: 'Save to table',\n    type: 'button',\n  },\n];\n\nconst formElement = createForm(FORM_FIELDS);\nconst tbodyElement = document.querySelector('table tbody');\n\ndocument.body.append(formElement);\n\nconst sortListener = createSortListener();\nconst selectListener = createSelectListener();\nconst edditListenr = createEditListener();\nconst formValidation = createFormValidation(FORM_FIELDS, tbodyElement);\n\ndocument.addEventListener('click', sortListener);\ndocument.addEventListener('click', selectListener);\ndocument.addEventListener('dblclick', edditListenr);\nformElement.addEventListener('submit', formValidation);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","form","currentOrderBy","activeRow","inEdit","fn","_ref","capitalize","string","slice","toUpperCase","toLowerCase","isInRange","param","_param_min","min","_param_max","max","Infinity","pushNotification","posTop","posRight","title","description","type","notification","document","createElement","titleElement","descriptionElement","className","innerText","concat","style","top","right","dataset","qa","append","body","setTimeout","remove","FORM_FIELDS","name","options","formElement","formFields","forEach","data","field","selectName","label","select","buttonName","button","inputName","input","optionName","option","tbodyElement","querySelector","sortListener","e","target","tagName","closest","colIndex","node","previousElementSibling","table","Error","rows","from","querySelectorAll","reverse","sortRows","isNumber","sort","a","b","textA","children","item","textB","replace","localeCompare","tbody","row","selectListener","classList","toggle","edditListenr","cell","currentText","_","_ts_generator","thisArg","f","y","t","g","sent","trys","ops","next","verb","Symbol","iterator","n","v","step","op","TypeError","call","pop","push","_state","focus","inputEventHandler","addEventListener","apply","self","args","arguments","err","undefined","preventDefault","employeeName","position","office","age","salary","nameElement","positionElement","officeElement","ageElement","salaryElement","currentTarget","formData","FormData","employee","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ret","_loop","_step_value","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","_unsupported_iterable_to_array","o","minLen","Object","prototype","toString","constructor","test","_non_iterable_rest","find","el","isFieldValid","_type_of","obj","return","toLocaleString","reset"],"version":3,"file":"index.392f9bf2.js.map"}